# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  ansiblePlaybookPath: 'ansible-playbooks'
  ansibleInventoryPath: '$(System.DefaultWorkingDirectory)/ansible_inventory.ini'
  
steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'ht-devops-service-conn'
    subscriptionId: '266adbeb-3ea4-4c96-9786-39e27c468655'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'HT-Resource-Grp'
    location: 'Central India'
    templateLocation: 'Linked artifact'
    csmFile: 'template.bicep'
    csmParametersFile: 'param_values.json'
    deploymentMode: 'Incremental'
    outputVariable: 'vmPublicIpAddress'
    
- script: |
    echo "VM Public IP Address: $(vmPublicIpAddress)"
  displayName: 'Print VM Public IP Address'
  
- script: |
    echo "[web_servers]" > $(ansibleInventoryPath)
    echo "web_server ansible_host=$(hostname -i)" >> $(ansibleInventoryPath)
  displayName: 'Create Ansible Inventory File'

- script: |
    sudo apt update
    sudo apt install ansible -y
    ansible-playbook -i $(ansibleInventoryPath) $(System.DefaultWorkingDirectory)/$(ansiblePlaybookPath)/configure-webserver.yml
  displayName: 'Run Ansible Playbook to Configure Apache2'
  env:
    ANSIBLE_HOST_KEY_CHECKING: 'False'
